/* automatically generated by rust-bindgen */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct public_key_class {
    pub modulus: ::std::os::raw::c_longlong,
    pub exponent: ::std::os::raw::c_longlong,
}
#[test]
fn bindgen_test_layout_public_key_class() {
    assert_eq!(
        ::std::mem::size_of::<public_key_class>(),
        16usize,
        concat!("Size of: ", stringify!(public_key_class))
    );
    assert_eq!(
        ::std::mem::align_of::<public_key_class>(),
        8usize,
        concat!("Alignment of ", stringify!(public_key_class))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<public_key_class>())).modulus as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(public_key_class),
            "::",
            stringify!(modulus)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<public_key_class>())).exponent as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(public_key_class),
            "::",
            stringify!(exponent)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct private_key_class {
    pub modulus: ::std::os::raw::c_longlong,
    pub exponent: ::std::os::raw::c_longlong,
}
#[test]
fn bindgen_test_layout_private_key_class() {
    assert_eq!(
        ::std::mem::size_of::<private_key_class>(),
        16usize,
        concat!("Size of: ", stringify!(private_key_class))
    );
    assert_eq!(
        ::std::mem::align_of::<private_key_class>(),
        8usize,
        concat!("Alignment of ", stringify!(private_key_class))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<private_key_class>())).modulus as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(private_key_class),
            "::",
            stringify!(modulus)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<private_key_class>())).exponent as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(private_key_class),
            "::",
            stringify!(exponent)
        )
    );
}
extern "C" {
    pub fn rsa_gen_keys(
        pub_: *mut public_key_class,
        priv_: *mut private_key_class,
        PRIME_SOURCE_FILE: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn rsa_encrypt(
        message: *const ::std::os::raw::c_char,
        message_size: ::std::os::raw::c_ulong,
        pub_: *const public_key_class,
    ) -> *mut ::std::os::raw::c_longlong;
}
extern "C" {
    pub fn rsa_decrypt(
        message: *const ::std::os::raw::c_longlong,
        message_size: ::std::os::raw::c_ulong,
        pub_: *const private_key_class,
    ) -> *mut ::std::os::raw::c_char;
}
